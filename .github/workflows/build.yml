name: Build APK

on:
  workflow_call:
    inputs:
      variant:
        required: true
        type: string
    secrets:
      CRYPTO_KEY:
        required: false
      KEY_PASSWORD:
        required: false
      STORE_PASSWORD:
        required: false
      OAUTH_CLIENT_ID:
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ["all", "arm", "arm64", "x86", "x86_64"]
      fail-fast: false

    env:
      CRYPTO_KEY: ${{ secrets.CRYPTO_KEY }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
      OAUTH_CLIENT_ID: ${{ secrets.OAUTH_CLIENT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: "on-failure"

      - name: Build APK for ${{ matrix.arch }}
        run: |
          chmod +x gradlew
          ./gradlew ZalithLauncher:assemble${{ inputs.variant }} -Darch=${{ matrix.arch }}

      - name: Upload Release APK for ${{ matrix.arch }}
        if: inputs.variant == 'Release'
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: ZalithLauncher2 ${{ matrix.arch }}
          path: ZalithLauncher/build/outputs/apk/release/*.apk

      - name: Upload Debug APK for ${{ matrix.arch }}
        if: inputs.variant == 'Debug'
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: ZalithLauncher-${{ inputs.variant }}-${{ matrix.arch }}
          path: ZalithLauncher/build/outputs/apk/debug/*.apk
